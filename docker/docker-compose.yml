version: '3.7'

services:
  frontend:
    build: 
      context: ../
      dockerfile: ./docker/frontend/Dockerfile.dev
    container_name: menu-frontend
    command: npm start
    restart: unless-stopped
    stdin_open: true
    tty: true
    volumes:
      - ../src/frontend/src:/var/www/menu/src

  nginx:
    image: nginx:stable-alpine
    container_name: menu-nginx
    ports:
      - "80:80"
      - "443:443"
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf.dev:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend

  backend:
    container_name: menu-backend
    build:
      context: ../
      dockerfile: ./docker/backend/Dockerfile.dev
    env_file: .env
    restart: unless-stopped
    environment:
      APP_ENV: ${APP_ENV}
      APP_SECRET: ${APP_SECRET}
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DATABASE}
    volumes:
      - ./logs/symfony:${WORKING_DIR}/var/log
      - ./logs/php-fpm:/var/log/php-fpm
      - ../src/backend/:${WORKING_DIR}
    working_dir: ${WORKING_DIR}
    depends_on:
        - postgres

  postgres:
    image: postgres:14.2-alpine
    container_name: menu-postrges
    environment:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DATABASE}
    volumes:
        - db-data:/var/lib/postgresql/data:rw
    ports:
        - "${POSTGRES_PORT}:5432"
    restart: unless-stopped

volumes:
  db-data: